"""
File: agents/questions_researcher/agent.py
Purpose: Defines the Questions Researcher Agent system that contains five specialized LLM agents
         running in parallel to research and answer the five questions generated by the 
         questions_generator agent. Each sub-agent focuses on researching one specific question
         using Google search to provide comprehensive, well-researched answers.

This is the second agent in the website building pipeline that:
1. Receives 5 questions from questions_generator_output
2. Runs 5 specialized agents in parallel (one per question)
3. Each agent researches its assigned question using Google search
4. Outputs 5 separate research results for the query_generator to merge
"""

# Import required system modules for path manipulation
import os  # Operating system interface for file paths
import sys  # System-specific parameters and functions

# Import agent classes from Google ADK (Agent Development Kit)
from google.adk.agents import LlmAgent, ParallelAgent  # LlmAgent for individual agents, ParallelAgent for orchestration

# Import Google search tool that allows agents to perform web searches
from google.adk.tools import google_search  # Pre-built tool for Google search functionality

# Add the project root directory to Python path so we can import utility modules
# This allows importing from the utils directory two levels up from current file
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__),"..","..")))

# Import utility function to load instruction files from text files
from utils.file_loader import load_instructions_file  # Helper to read instruction text files

# Load shared instructions and description that will be used by all 5 sub-agents
# These files contain the common behavior and guidelines for question research
base_instructions = load_instructions_file("agents/questions_researcher/instructions.txt")  # Common research instructions
base_description = load_instructions_file("agents/questions_researcher/description.txt")    # Common agent description

# --- 1. Define Question Researcher Sub-Agents (to run in parallel) ---
# Each agent is specialized to handle exactly one question from the list of 5 questions
# They all share the same base instructions but are assigned different question numbers

# Question Researcher 1 - Handles the first question from the questions list
question_researcher_agent_1 = LlmAgent(
    name="QuestionResearcher1",  # Unique identifier for this specific researcher
    model="gemini-2.0-flash",    # AI model - Gemini 2.0 Flash for fast, high-quality responses
    # Combine question assignment with base instructions using f-string formatting
    instruction=f"You are assigned to answer QUESTION NUMBER 1 only.\n\n{base_instructions}",
    # Combine base description with specific role information
    description=f"{base_description} This agent specifically handles question #1.",
    tools=[google_search],  # Google search tool for researching the assigned question
    # Unique output key where this agent stores its research results
    output_key="question_1_research_output"
)

# Question Researcher 2 - Handles the second question from the questions list
question_researcher_agent_2 = LlmAgent(
    name="QuestionResearcher2",  # Unique identifier for this specific researcher
    model="gemini-2.0-flash",    # AI model - Gemini 2.0 Flash for fast, high-quality responses
    # Combine question assignment with base instructions using f-string formatting
    instruction=f"You are assigned to answer QUESTION NUMBER 2 only.\n\n{base_instructions}",
    # Combine base description with specific role information
    description=f"{base_description} This agent specifically handles question #2.",
    tools=[google_search],  # Google search tool for researching the assigned question
    # Unique output key where this agent stores its research results
    output_key="question_2_research_output"
)

# Question Researcher 3 - Handles the third question from the questions list
question_researcher_agent_3 = LlmAgent(
    name="QuestionResearcher3",  # Unique identifier for this specific researcher
    model="gemini-2.0-flash",    # AI model - Gemini 2.0 Flash for fast, high-quality responses
    # Combine question assignment with base instructions using f-string formatting
    instruction=f"You are assigned to answer QUESTION NUMBER 3 only.\n\n{base_instructions}",
    # Combine base description with specific role information
    description=f"{base_description} This agent specifically handles question #3.",
    tools=[google_search],  # Google search tool for researching the assigned question
    # Unique output key where this agent stores its research results
    output_key="question_3_research_output"
)

# Question Researcher 4 - Handles the fourth question from the questions list
question_researcher_agent_4 = LlmAgent(
    name="QuestionResearcher4",  # Unique identifier for this specific researcher
    model="gemini-2.0-flash",    # AI model - Gemini 2.0 Flash for fast, high-quality responses
    # Combine question assignment with base instructions using f-string formatting
    instruction=f"You are assigned to answer QUESTION NUMBER 4 only.\n\n{base_instructions}",
    # Combine base description with specific role information
    description=f"{base_description} This agent specifically handles question #4.",
    tools=[google_search],  # Google search tool for researching the assigned question
    # Unique output key where this agent stores its research results
    output_key="question_4_research_output"
)

# Question Researcher 5 - Handles the fifth question from the questions list
question_researcher_agent_5 = LlmAgent(
    name="QuestionResearcher5",  # Unique identifier for this specific researcher
    model="gemini-2.0-flash",    # AI model - Gemini 2.0 Flash for fast, high-quality responses
    # Combine question assignment with base instructions using f-string formatting
    instruction=f"You are assigned to answer QUESTION NUMBER 5 only.\n\n{base_instructions}",
    # Combine base description with specific role information
    description=f"{base_description} This agent specifically handles question #5.",
    tools=[google_search],  # Google search tool for researching the assigned question
    # Unique output key where this agent stores its research results
    output_key="question_5_research_output"
)

# --- 2. Create the ParallelAgent (Runs all question researchers concurrently) ---
# ParallelAgent orchestrates the concurrent execution of all five question researchers
# This significantly reduces total execution time compared to running them sequentially
# The parallel agent completes when ALL sub-agents have finished their research
parallel_questions_researcher_agent = ParallelAgent(
    name="ParallelQuestionsResearchAgent",  # Identifier for the parallel orchestrator
    # List of all 5 sub-agents that will run simultaneously
    sub_agents=[
        question_researcher_agent_1,  # Researcher for question 1
        question_researcher_agent_2,  # Researcher for question 2
        question_researcher_agent_3,  # Researcher for question 3
        question_researcher_agent_4,  # Researcher for question 4
        question_researcher_agent_5   # Researcher for question 5
    ],
    # Description of what this parallel agent accomplishes
    description="Runs five question research agents in parallel to research and answer all five questions simultaneously."
)

# Set the main export variable to the parallel agent
# This is what gets imported when other modules import from this file
# The parallel agent becomes the single entry point that manages all 5 researchers
questions_researcher_agent = parallel_questions_researcher_agent